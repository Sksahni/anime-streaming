--- README.txt ---
This package contains a minimal, production-ready PHP + MySQL anime streaming website designed for InfinityFree hosting.

Steps to deploy:
1. Upload all files to your InfinityFree account under /htdocs or public_html.
2. Create a MySQL database in InfinityFree and import /database/anime.sql.
3. Open /config.php and update DB credentials and ADMIN credentials.
4. Make sure your video links are external (YouTube unlisted, Google Drive direct links, or streaming hosts). Add episodes via the admin panel.

Default admin credentials: set in config.php (change immediately!)

--- config.php ---
<?php
// Update these values after importing database
define('DB_HOST', 'localhost');
define('DB_NAME', 'your_db_name');
define('DB_USER', 'your_db_user');
define('DB_PASS', 'your_db_pass');

// Admin panel credentials (change immediately)
define('ADMIN_USER', 'admin');
define('ADMIN_PASS', 'admin123'); // change this before going live

session_start();

function db() {
    static $pdo = null;
    if ($pdo === null) {
        $dsn = 'mysql:host=' . DB_HOST . ';dbname=' . DB_NAME . ';charset=utf8mb4';
        try {
            $pdo = new PDO($dsn, DB_USER, DB_PASS, [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION]);
        } catch (Exception $e) {
            die('DB Connection failed: ' . $e->getMessage());
        }
    }
    return $pdo;
}

function is_logged_in() {
    return !empty($_SESSION['user']);
}

function current_user() {
    return $_SESSION['user'] ?? null;
}

?>

--- index.php ---
<?php require 'config.php';
$pdo = db();
$sth = $pdo->query("SELECT * FROM anime ORDER BY id DESC LIMIT 40");
animes = $sth->fetchAll(PDO::FETCH_ASSOC);
?>
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>AnimeStream - Home</title>
  <link rel="stylesheet" href="assets/css/style.css">
  <link rel="stylesheet" href="https://cdn.plyr.io/3.6.8/plyr.css" />
</head>
<body class="dark">
  <nav class="nav">
    <div class="logo">AnimeStream</div>
    <div class="nav-right">
      <a href="index.php">Home</a>
      <a href="admin.php">Admin</a>
      <?php if(is_logged_in()): ?>
        <a href="logout.php">Logout</a>
      <?php else: ?>
        <a href="login.php">Login</a>
        <a href="signup.php">Signup</a>
      <?php endif; ?>
    </div>
  </nav>

  <main class="container">
    <section class="hero glass">
      <h1>Premium Anime, Smooth Playback</h1>
      <p>Glassmorphism UI — Dark theme</p>
    </section>

    <section class="grid">
      <?php foreach($animes as $a): ?>
        <a class="card" href="anime.php?id=<?php echo $a['id']; ?>">
          <img src="assets/images/<?php echo htmlspecialchars($a['thumbnail']); ?>" alt="thumb">
          <div class="card-body">
            <h3><?php echo htmlspecialchars($a['title']); ?></h3>
            <p><?php echo htmlspecialchars($a['genre']); ?></p>
          </div>
        </a>
      <?php endforeach; ?>
    </section>
  </main>

  <script src="assets/js/script.js"></script>
</body>
</html>

--- anime.php ---
<?php require 'config.php';
$pdo = db();
$id = intval($_GET['id'] ?? 0);
$sth = $pdo->prepare('SELECT * FROM anime WHERE id = ?');
$sth->execute([$id]);
$anime = $sth->fetch(PDO::FETCH_ASSOC);
if (!$anime) { header('Location: index.php'); exit; }
$eps = $pdo->prepare('SELECT * FROM episodes WHERE anime_id = ? ORDER BY ep_no ASC');
$eps->execute([$id]);
episodes = $eps->fetchAll(PDO::FETCH_ASSOC);
?>
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title><?php echo htmlspecialchars($anime['title']); ?></title>
  <link rel="stylesheet" href="assets/css/style.css">
  <link rel="stylesheet" href="https://cdn.plyr.io/3.6.8/plyr.css" />
</head>
<body class="dark">
  <nav class="nav">
    <div class="logo">AnimeStream</div>
    <div class="nav-right">
      <a href="index.php">Home</a>
      <a href="admin.php">Admin</a>
      <?php if(is_logged_in()): ?>
        <a href="logout.php">Logout</a>
      <?php else: ?>
        <a href="login.php">Login</a>
        <a href="signup.php">Signup</a>
      <?php endif; ?>
    </div>
  </nav>

  <main class="container">
    <div class="anime-header glass">
      <img src="assets/images/<?php echo htmlspecialchars($anime['thumbnail']); ?>" alt="thumb">
      <div class="meta">
        <h1><?php echo htmlspecialchars($anime['title']); ?></h1>
        <p><?php echo htmlspecialchars($anime['description']); ?></p>
        <p><strong>Genre:</strong> <?php echo htmlspecialchars($anime['genre']); ?></p>
      </div>
    </div>

    <section class="episodes glass">
      <h2>Episodes</h2>
      <ul>
        <?php foreach($episodes as $ep): ?>
          <li><a href="watch.php?ep=<?php echo $ep['id']; ?>">Ep <?php echo $ep['ep_no']; ?> - <?php echo htmlspecialchars($ep['ep_title']); ?></a></li>
        <?php endforeach; ?>
      </ul>
    </section>
  </main>

  <script src="assets/js/script.js"></script>
</body>
</html>

--- watch.php ---
<?php require 'config.php';
$pdo = db();
$ep_id = intval($_GET['ep'] ?? 0);
$sth = $pdo->prepare('SELECT e.*, a.title as anime_title FROM episodes e JOIN anime a ON a.id = e.anime_id WHERE e.id = ?');
$sth->execute([$ep_id]);
ep = $sth->fetch(PDO::FETCH_ASSOC);
if (!$ep) { header('Location: index.php'); exit; }
// support youtube or direct mp4/hls
$video_url = $ep['video_url'];
?>
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Watch - <?php echo htmlspecialchars($ep['anime_title']); ?> Ep <?php echo $ep['ep_no']; ?></title>
  <link rel="stylesheet" href="assets/css/style.css">
  <link rel="stylesheet" href="https://cdn.plyr.io/3.6.8/plyr.css" />
</head>
<body class="dark">
  <nav class="nav">
    <div class="logo">AnimeStream</div>
    <div class="nav-right">
      <a href="index.php">Home</a>
      <a href="admin.php">Admin</a>
      <?php if(is_logged_in()): ?>
        <a href="logout.php">Logout</a>
      <?php else: ?>
        <a href="login.php">Login</a>
        <a href="signup.php">Signup</a>
      <?php endif; ?>
    </div>
  </nav>

  <main class="container">
    <div class="player glass">
      <!-- Plyr will handle YouTube or MP4 links -->
      <?php if (strpos($video_url,'youtube.com') !== false || strpos($video_url,'youtu.be') !== false): ?>
        <div class="plyr__video-embed" id="player">
          <iframe src="<?php echo htmlspecialchars($video_url); ?>?origin=<?php echo htmlspecialchars('http://' . $_SERVER['HTTP_HOST']); ?>" allowfullscreen allowtransparency allow="autoplay"></iframe>
        </div>
      <?php else: ?>
        <video id="player" playsinline controls>
          <source src="<?php echo htmlspecialchars($video_url); ?>" type="video/mp4">
        </video>
      <?php endif; ?>

      <h3><?php echo htmlspecialchars($ep['anime_title']); ?> — Ep <?php echo $ep['ep_no']; ?></h3>
    </div>

    <aside class="related glass">
      <h4>Other Episodes</h4>
      <ul>
        <?php
        $other = $pdo->prepare('SELECT id, ep_no, ep_title FROM episodes WHERE anime_id = ? ORDER BY ep_no ASC');
        $other->execute([$ep['anime_id']]);
        foreach($other->fetchAll(PDO::FETCH_ASSOC) as $o) {
          echo '<li><a href="watch.php?ep='.$o['id'].'">Ep '.$o['ep_no'].' - '.htmlspecialchars($o['ep_title']).'</a></li>';
        }
        ?>
      </ul>
    </aside>
  </main>

  <script src="https://cdn.plyr.io/3.6.8/plyr.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      if (document.querySelector('#player') && !document.querySelector('.plyr__video-embed')) {
        const player = new Plyr('#player');
      } else if (document.querySelector('.plyr__video-embed')) {
        const player = new Plyr('.plyr__video-embed');
      }
    });
  </script>
</body>
</html>

--- login.php ---
<?php require 'config.php';
$pdo = db();
$err = '';
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = trim($_POST['email']);
    $pass = $_POST['password'];
    $sth = $pdo->prepare('SELECT * FROM users WHERE email = ? LIMIT 1');
    $sth->execute([$email]);
    $u = $sth->fetch(PDO::FETCH_ASSOC);
    if ($u && password_verify($pass, $u['password'])) {
        $_SESSION['user'] = ['id'=>$u['id'],'name'=>$u['name'],'email'=>$u['email']];
        header('Location: index.php'); exit;
    } else {
        $err = 'Invalid credentials';
    }
}
?>
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Login</title>
  <link rel="stylesheet" href="assets/css/style.css">
</head>
<body class="dark">
  <main class="auth glass">
    <h2>Login</h2>
    <?php if($err): ?><p class="error"><?php echo $err; ?></p><?php endif; ?>
    <form method="post">
      <input name="email" placeholder="Email" required>
      <input name="password" type="password" placeholder="Password" required>
      <button type="submit">Login</button>
    </form>
  </main>
</body>
</html>

--- signup.php ---
<?php require 'config.php';
$pdo = db();
$err = '';
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $pass = $_POST['password'];
    // basic checks
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) $err = 'Invalid email';
    if (!$err) {
      $sth = $pdo->prepare('SELECT id FROM users WHERE email = ?');
      $sth->execute([$email]);
      if ($sth->fetch()) $err = 'Email already exists';
    }
    if (!$err) {
      $hash = password_hash($pass, PASSWORD_DEFAULT);
      $ins = $pdo->prepare('INSERT INTO users (name,email,password) VALUES (?,?,?)');
      $ins->execute([$name,$email,$hash]);
      header('Location: login.php'); exit;
    }
}
?>
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Signup</title>
  <link rel="stylesheet" href="assets/css/style.css">
</head>
<body class="dark">
  <main class="auth glass">
    <h2>Signup</h2>
    <?php if($err): ?><p class="error"><?php echo $err; ?></p><?php endif; ?>
    <form method="post">
      <input name="name" placeholder="Name" required>
      <input name="email" placeholder="Email" required>
      <input name="password" type="password" placeholder="Password" required>
      <button type="submit">Signup</button>
    </form>
  </main>
</body>
</html>

--- logout.php ---
<?php require 'config.php';
session_destroy();
header('Location: index.php');
exit;
?>

--- admin.php ---
<?php require 'config.php';
// Simple admin protection using credentials from config.php
$err = '';
if (!empty($_POST['admin_user'])) {
  if ($_POST['admin_user'] === ADMIN_USER && $_POST['admin_pass'] === ADMIN_PASS) {
    $_SESSION['is_admin'] = true;
  } else {
    $err = 'Bad admin credentials';
  }
}
if (!empty($_POST['action']) && !empty($_SESSION['is_admin'])) {
  $action = $_POST['action'];
  if ($action === 'add_anime') {
    $title = $_POST['title'];
    $desc = $_POST['description'];
    $genre = $_POST['genre'];
    $thumb = $_POST['thumbnail']; // just filename placed in assets/images/
    $ins = db()->prepare('INSERT INTO anime (title,description,genre,thumbnail) VALUES (?,?,?,?)');
    $ins->execute([$title,$desc,$genre,$thumb]);
    header('Location: admin.php'); exit;
  }
  if ($action === 'add_episode') {
    $anime_id = intval($_POST['anime_id']);
    $ep_no = intval($_POST['ep_no']);
    $ep_title = $_POST['ep_title'];
    $video_url = $_POST['video_url'];
    $ins = db()->prepare('INSERT INTO episodes (anime_id,ep_no,ep_title,video_url) VALUES (?,?,?,?)');
    $ins->execute([$anime_id,$ep_no,$ep_title,$video_url]);
    header('Location: admin.php'); exit;
  }
}
$animes = db()->query('SELECT id,title FROM anime')->fetchAll(PDO::FETCH_ASSOC);
?>
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Admin Panel</title>
  <link rel="stylesheet" href="assets/css/style.css">
</head>
<body class="dark">
  <nav class="nav"><div class="logo">AnimeStream</div></nav>
  <main class="container">
    <?php if(empty($_SESSION['is_admin'])): ?>
      <div class="glass auth">
        <h2>Admin Login</h2>
        <?php if($err) echo '<p class="error">'.htmlspecialchars($err).'</p>'; ?>
        <form method="post">
          <input name="admin_user" placeholder="Admin user" required>
          <input name="admin_pass" placeholder="Admin password" type="password" required>
          <button type="submit">Login</button>
        </form>
      </div>
    <?php else: ?>
      <section class="glass admin">
        <h2>Add Anime</h2>
        <form method="post">
          <input type="hidden" name="action" value="add_anime">
          <input name="title" placeholder="Title" required>
          <input name="genre" placeholder="Genre" required>
          <input name="thumbnail" placeholder="Thumbnail filename in assets/images/ e.g. t1.jpg" required>
          <textarea name="description" placeholder="Short description"></textarea>
          <button type="submit">Create Anime</button>
        </form>
      </section>

      <section class="glass admin">
        <h2>Add Episode</h2>
        <form method="post">
          <input type="hidden" name="action" value="add_episode">
          <select name="anime_id" required>
            <?php foreach($animes as $a) echo '<option value="'.$a['id'].'">'.htmlspecialchars($a['title']).'</option>'; ?>
          </select>
          <input name="ep_no" placeholder="Episode number" required>
          <input name="ep_title" placeholder="Episode title" required>
          <input name="video_url" placeholder="Full video URL (YouTube or direct MP4)" required>
          <button type="submit">Add Episode</button>
        </form>
      </section>

      <section class="glass admin">
        <h2>Quick Links</h2>
        <a href="index.php">View Site</a>
      </section>
    <?php endif; ?>
  </main>
</body>
</html>

--- assets/css/style.css ---
/* Minimal glassmorphism dark theme */
:root{--bg:#0b0f14;--glass:rgba(255,255,255,0.04);--muted:rgba(255,255,255,0.6)}
*{box-sizing:border-box;font-family:Inter,system-ui,Arial,sans-serif}
body.dark{background:linear-gradient(180deg,#06080a, #0f1418);color:#fff;margin:0}
.nav{display:flex;justify-content:space-between;align-items:center;padding:12px 20px}
.logo{font-weight:700}
.container{max-width:1100px;margin:20px auto;padding:0 16px}
.hero{padding:28px;border-radius:12px;margin-bottom:18px}
.grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(180px,1fr));gap:18px}
.card{display:block;border-radius:12px;overflow:hidden;text-decoration:none;color:inherit;transition:transform .25s,box-shadow .25s}
.card img{width:100%;height:220px;object-fit:cover;display:block}
.card-body{padding:12px}
.card:hover{transform:translateY(-6px);box-shadow:0 8px 30px rgba(0,0,0,0.6)}
.glass{background:var(--glass);backdrop-filter:blur(8px);border:1px solid rgba(255,255,255,0.04);padding:16px}
.anime-header{display:flex;gap:16px;align-items:flex-start}
.anime-header img{width:180px;border-radius:8px}
.episodes ul{list-style:none;padding:0}
.episodes li{padding:8px 0}
.player{max-width:900px;margin-bottom:18px}
.related{margin-top:12px}
.auth{max-width:420px;margin:60px auto;padding:24px}
.auth form, .admin form{display:flex;flex-direction:column;gap:10px}
input, textarea, select{padding:10px;border-radius:8px;border:1px solid rgba(255,255,255,0.06);background:transparent;color:#fff}
button{padding:10px;border-radius:8px;border:0;background:#1f6feb;color:#fff}
.error{color:#ff7b7b}
@media(max-width:700px){.anime-header{flex-direction:column}.card img{height:160px}}

--- assets/js/script.js ---
// Small helpers (expand later)
document.addEventListener('click', e => {
  // future interactive features
});

--- database/anime.sql ---
-- MySQL schema for AnimeStream
CREATE TABLE IF NOT EXISTS anime (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  genre VARCHAR(100),
  thumbnail VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS episodes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  anime_id INT NOT NULL,
  ep_no INT NOT NULL,
  ep_title VARCHAR(255),
  video_url TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (anime_id) REFERENCES anime(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(150),
  email VARCHAR(255) UNIQUE,
  password VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Optional: sample anime (you'll replace thumbnails with real files)
INSERT INTO anime (title,description,genre,thumbnail) VALUES
('Sample Anime','A sample anime for testing. Replace with real data.','Action','sample.jpg');

INSERT INTO episodes (anime_id,ep_no,ep_title,video_url) VALUES
(1,1,'Episode 1','https://www.youtube.com/embed/dQw4w9WgXcQ');

--- END OF PACKAGE ---
